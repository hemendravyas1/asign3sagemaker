AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template
Parameters:
  EndPointName:
    Type: String
Resources:
  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: spam-store-hemendra
  SampleBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StorageBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref StorageBucket
                - /*
            Principal:
              Service: "ses.amazonaws.com"
  EmailLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: asgn3lf1-role-teamabcd
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/CloudWatchEventsFullAccess
      Path: /
  SesRuleSet:
    Type: 'AWS::SES::ReceiptRuleSet'
  SesRule:
    Type: 'AWS::SES::ReceiptRule'
    Properties:
      Rule:
        Actions:
          - S3Action:
              BucketName: !Ref StorageBucket
        Enabled: true
        ScanEnabled: false
      RuleSetName: !Ref SesRuleSet
  LambdaFunctionEmail:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: spam-detector-store
        S3Key: spam_classify.zip
      Description: lambda function for email
      Environment:
        Variables:
          ENDPOINT_NAME: !Ref EndPointName
      FunctionName: email_lambda_cloudformation
      Handler: spam_classify.lambda_handler
      MemorySize: 512
      Role:
       Fn::GetAtt:
          - EmailLambdaRole
          - Arn
      Runtime: python3.8
      Timeout: 60
      Layers:
        - !Ref NumpyLayer
  NumpyLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: spam-detector-store
        S3Key: numpy-layer.zip
      Description: My layer
      LayerName: my-layer
      LicenseInfo: MIT
  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt email_lambda_cloudformation.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !GetAtt StorageBucket.Arn



